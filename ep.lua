--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.2) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v81=0;while true do if (v81==0) then v19=v0(v3(v30,1,1));return "";end end else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v30,16));if v19 then local v101=0;local v102;while true do if (v101==0) then v102=v5(v83,v19);v19=nil;v101=1;end if (v101==1) then return v102;end end else return v83;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v84=(v31/((5 -3)^(v32-(1 + 0))))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v84-(v84%(932 -(857 + 74))) ;else local v85=0;local v86;while true do if (v85==0) then v86=(570 -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v86 + v86))>=v86) and 1) or (0 + (877 -(282 + 595))) ;end end end end local function v21() local v34=1637 -(1523 + 114) ;local v35;while true do if (v34==(1 + 0)) then return v35;end if (v34==((0 -0) -0)) then v35=v1(v16,v18,v18);v18=v18 + (1066 -(68 + 997)) ;v34=1271 -((343 -(32 + 85)) + 1044) ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 1 + 1 ;return (v37 * (1213 -(892 + 65))) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (7 -4) );v18=v18 + ((5 + 1) -2) ;return (v41 * (30800116 -14022900)) + (v40 * (65886 -(87 + 263))) + (v39 * (436 -(67 + (277 -164)))) + v38 ;end local function v24() local v42=0 + 0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(443 -(416 + 26))) then v45=3 -2 ;v46=(v20(v44,953 -(802 + 150) ,53 -33 ) * (2^((1480 -(630 + 793)) -25))) + v43 ;v42=2;end if (v42==((0 -0) + 0)) then v43=v23();v44=v23();v42=998 -(915 + 82) ;end if (v42==2) then v47=v20(v44,59 -38 ,(7182 -5665) -(998 + 488) );v48=((v20(v44,11 + 21 )==(1 + 0)) and  -(773 -(201 + 225 + 346))) or (1 -0) ;v42=(4097 -2907) -(1069 + 118) ;end if (v42==(6 -(1750 -(760 + 987)))) then if (v47==((1913 -(1789 + 124)) -(766 -(745 + 21)))) then if (v46==(0 + 0)) then return v48 * (0 -0) ;else v47=1 + 0 ;v45=0 -0 ;end elseif (v47==(2031 + 16)) then return ((v46==(0 + 0)) and (v48 * ((792 -(368 + 423))/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(1041 -(4 + 6 + 8)) ) * (v45 + (v46/((3 -1)^(199 -147)))) ;end end end local function v25(v49) local v50=0 -0 ;local v51;local v52;while true do if (v50==(3 -2)) then v51=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;v50=1 + 1 ;end if ((2 + 0)==v50) then v52={};for v93=1056 -((1500 -(447 + 966)) + 968) , #v51 do v52[v93]=v2(v1(v3(v51,v93,v93)));end v50=13 -10 ;end if (v50==(0 -0)) then v51=nil;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=(1819 -(1703 + 114)) -1 ;end if (v50==3) then return v6(v52);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=0 -0 ;local v54;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v53~=(7 -4)) then else v60=nil;while true do local v95=603 -(268 + 335) ;while true do if (v95~=(291 -(60 + 230))) then else if (v54==(574 -(426 + 146))) then local v103=0 + 0 ;local v104;while true do if (v103~=(1456 -(282 + 1174))) then else v104=0 -0 ;while true do if (v104==(812 -(569 + 242))) then for v161=2 -1 ,v23() do local v162=216 -(42 + 174) ;local v163;local v164;while true do if (v162~=1) then else while true do if (v163==(0 + 0)) then v164=v21();if (v20(v164,1 + 0 ,1025 -(706 + 318) )~=0) then else local v456=1251 -(721 + 530) ;local v457;local v458;local v459;local v460;while true do if (v456==(1273 -(945 + 326))) then while true do if (v457~=(7 -4)) then else if (v20(v459,3,8 -5 )==(1 + 0)) then v460[4]=v60[v460[3 + 1 ]];end v55[v161]=v460;break;end if (v457~=(701 -(271 + 429))) then else local v482=1975 -(1913 + 62) ;while true do if (v482~=(1 + 0)) then else v457=2;break;end if (v482==(0 + 0)) then v460={v22(),v22(),nil,nil};if (v458==(1288 -(993 + 295))) then local v492=0;local v493;local v494;while true do if (v492==0) then v493=0;v494=nil;v492=1 + 0 ;end if ((1172 -(418 + 753))==v492) then while true do if (v493==(856 -(564 + 292))) then v494=0 + 0 ;while true do if (v494==0) then v460[1 + 2 ]=v22();v460[308 -(244 + 60) ]=v22();break;end end break;end end break;end end elseif (v458==(1 + 0)) then v460[1 + 2 ]=v23();elseif (v458==(1 + 1)) then v460[1004 -(938 + 63) ]=v23() -((531 -(406 + 123))^(1785 -(1749 + 20))) ;elseif (v458~=3) then else local v501=0 + 0 ;local v502;while true do if (v501~=(1322 -(1249 + 73))) then else v502=0;while true do if (v502~=0) then else v460[3]=v23() -((1127 -(936 + 189))^(6 + 10)) ;v460[2 + 2 ]=v22();break;end end break;end end end v482=1146 -(466 + 679) ;end end end if (v457~=(2 + 0)) then else local v483=0;while true do if (v483~=(1138 -(782 + 356))) then else if (v20(v459,1,2 -1 )~=(2 -1)) then else v460[1902 -(106 + 1794) ]=v60[v460[1 + 1 ]];end if (v20(v459,2 -0 ,2)~=(1 + 0)) then else v460[8 -5 ]=v60[v460[7 -4 ]];end v483=1 + 0 ;end if (v483==(115 -(4 + 110))) then v457=587 -(57 + 527) ;break;end end end if ((1427 -(41 + 1386))==v457) then local v484=0 -0 ;while true do if (v484==(103 -(17 + 86))) then local v488=0 + 0 ;while true do if (v488~=0) then else v458=v20(v164,3 -1 ,6 -3 );v459=v20(v164,2 + 2 ,11 -5 );v488=1;end if (v488==(2 -1)) then v484=2 -1 ;break;end end end if (v484==(167 -(122 + 44))) then v457=1 -0 ;break;end end end end break;end if (v456==(1190 -(449 + 740))) then v459=nil;v460=nil;v456=874 -(826 + 46) ;end if (v456==0) then v457=0;v458=nil;v456=1;end end end break;end end break;end if (v162==(0 -0)) then local v384=0 + 0 ;while true do if (v384==(1 + 0)) then v162=1 -0 ;break;end if (v384==(1898 -(260 + 1638))) then v163=65 -(30 + 35) ;v164=nil;v384=1 + 0 ;end end end end end v54=1260 -(1043 + 214) ;break;end if (v104~=(0 -0)) then else local v153=0 + 0 ;local v154;while true do if (v153~=(1212 -(323 + 889))) then else v154=0;while true do if (v154~=0) then else local v432=0;while true do if (v432==(0 -0)) then for v467=581 -(361 + 219) ,v59 do local v468=0 -0 ;local v469;local v470;local v471;local v472;while true do if (v468==(320 -(53 + 267))) then local v476=0 + 0 ;while true do if (v476==1) then v468=1;break;end if (v476==0) then v469=0;v470=nil;v476=414 -(15 + 398) ;end end end if (2==v468) then while true do if ((982 -(18 + 964))==v469) then local v485=0;while true do if ((3 -2)==v485) then v469=1 + 0 ;break;end if (v485==(0 + 0)) then v470=0;v471=nil;v485=1;end end end if (v469==1) then v472=nil;while true do if (1~=v470) then else if (v471==(851 -(20 + 830))) then v472=v21()~=0 ;elseif (v471==(2 + 0)) then v472=v24();elseif (v471~=(129 -(116 + 10))) then else v472=v25();end v60[v467]=v472;break;end if (v470==(214 -(22 + 192))) then local v490=0;local v491;while true do if (v490==(0 + 0)) then v491=738 -(542 + 196) ;while true do if (v491==1) then v470=1 -0 ;break;end if (0~=v491) then else v471=v21();v472=nil;v491=1 + 0 ;end end break;end end end end break;end end break;end if (v468==(1 + 0)) then local v477=0 + 0 ;while true do if (v477==(1 -0)) then v468=4 -2 ;break;end if (v477~=(0 -0)) then else v471=nil;v472=nil;v477=1552 -(1126 + 425) ;end end end end end v58[408 -(118 + 287) ]=v21();v432=3 -2 ;end if (v432==1) then v154=3 -2 ;break;end end end if (v154==1) then v104=1 -0 ;break;end end break;end end end end break;end end end if (v54==(1121 -(118 + 1003))) then local v105=236 -(141 + 95) ;local v106;while true do if (v105==(0 -0)) then v106=0;while true do if (v106==1) then v57={};v54=1;break;end if (v106~=(377 -(142 + 235))) then else local v155=0 + 0 ;while true do if (v155==(0 -0)) then v55={};v56={};v155=2 -1 ;end if ((4 -3)==v155) then v106=1;break;end end end end break;end end end break;end if (v95==(0 + 0)) then if (v54==(8 -5)) then local v107=977 -(553 + 424) ;local v108;while true do if (v107~=(0 -0)) then else v108=0 + 0 ;while true do if (v108~=(0 + 0)) then else for v165=1 -0 ,v23() do v56[v165-1 ]=v28();end return v58;end end break;end end end if (v54~=(1 + 0)) then else local v109=163 -(92 + 71) ;local v110;while true do if (v109==(0 + 0)) then v110=0 + 0 ;while true do if (v110==0) then local v156=0;while true do if (v156==(0 + 0)) then v58={v55,v56,nil,v57};v59=v23();v156=2 -1 ;end if (v156~=(2 -1)) then else v110=766 -(574 + 191) ;break;end end end if (v110==(2 -1)) then v60={};v54=2;break;end end break;end end end v95=1 + 0 ;end end end break;end if (v53==0) then local v90=0 -0 ;while true do if (v90==(1 + 0)) then v53=754 -(239 + 514) ;break;end if (v90~=(0 + 0)) then else v54=1329 -(797 + 532) ;v55=nil;v90=1 + 0 ;end end end if (v53==(850 -(254 + 595))) then local v91=126 -(55 + 71) ;while true do if ((1 -0)==v91) then v53=2;break;end if ((0 + 0)==v91) then v56=nil;v57=nil;v91=1 + 0 ;end end end if ((4 -2)==v53) then local v92=0 + 0 ;while true do if ((1 -0)~=v92) then else v53=942 -(714 + 225) ;break;end if ((1202 -(373 + 829))==v92) then local v100=731 -(476 + 255) ;while true do if (v100==(1131 -(369 + 761))) then v92=1 + 0 ;break;end if (v100==0) then v58=nil;v59=nil;v100=1 -0 ;end end end end end end end local function v29(v61,v62,v63) local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...) local v67=v64;local v68=v65;local v69=v66;local v70=v27;local v71=1;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v87=0,v75 do if (v87>=v69) then v73[v87-v69 ]=v74[v87 + 1 ];else v77[v87]=v74[v87 + 1 ];end end local v78=(v75-v69) + 1 ;local v79;local v80;while true do v79=v67[v71];v80=v79[1];if (v80<=50) then if (v80<=24) then if (v80<=11) then if (v80<=5) then if (v80<=2) then if (v80<=0) then v77[v79[2]]=v77[v79[3]] * v79[4] ;elseif (v80==1) then v77[v79[2]][v77[v79[3]]]=v79[4];else v77[v79[2]]=v62[v79[3]];end elseif (v80<=3) then v77[v79[2]]=v77[v79[3]]/v79[4] ;elseif (v80>4) then v77[v79[2]][v77[v79[3]]]=v77[v79[4]];else v77[v79[2]][v79[3]]=v77[v79[4]];end elseif (v80<=8) then if (v80<=6) then local v113=0;local v114;while true do if (v113==0) then v114=v79[2];v77[v114]=v77[v114](v77[v114 + 1 ]);break;end end elseif (v80==7) then local v175=v79[2];do return v77[v175](v13(v77,v175 + 1 ,v79[3]));end else local v176=v68[v79[3]];local v177;local v178={};v177=v10({},{__index=function(v300,v301) local v302=0;local v303;while true do if (v302==0) then v303=v178[v301];return v303[1][v303[2]];end end end,__newindex=function(v304,v305,v306) local v307=0;local v308;while true do if (v307==0) then v308=v178[v305];v308[1][v308[2]]=v306;break;end end end});for v309=1,v79[4] do local v310=0;local v311;while true do if (v310==0) then v71=v71 + 1 ;v311=v67[v71];v310=1;end if (v310==1) then if (v311[1]==46) then v178[v309-1 ]={v77,v311[3]};else v178[v309-1 ]={v62,v311[3]};end v76[ #v76 + 1 ]=v178;break;end end end v77[v79[2]]=v29(v176,v177,v63);end elseif (v80<=9) then v77[v79[2]]=v77[v79[3]] + v79[4] ;elseif (v80>10) then v77[v79[2]][v77[v79[3]]]=v77[v79[4]];else v77[v79[2]]=v77[v79[3]] -v79[4] ;end elseif (v80<=17) then if (v80<=14) then if (v80<=12) then do return v77[v79[2]];end elseif (v80==13) then local v183=0;local v184;while true do if (v183==0) then v184=v79[2];do return v77[v184](v13(v77,v184 + 1 ,v79[3]));end break;end end else local v185=0;local v186;while true do if (v185==0) then v186=v79[2];v77[v186]=v77[v186](v13(v77,v186 + 1 ,v72));break;end end end elseif (v80<=15) then local v116=v79[3];local v117=v77[v116];for v157=v116 + 1 ,v79[4] do v117=v117   .. v77[v157] ;end v77[v79[2]]=v117;elseif (v80==16) then v77[v79[2]]=v29(v68[v79[3]],nil,v63);else local v188=v79[2];do return v13(v77,v188,v72);end end elseif (v80<=20) then if (v80<=18) then local v119=0;local v120;while true do if (v119==0) then v120=v79[2];v77[v120](v13(v77,v120 + 1 ,v79[3]));break;end end elseif (v80==19) then local v189=0;local v190;while true do if (v189==0) then v190=v79[2];do return v13(v77,v190,v190 + v79[3] );end break;end end else v77[v79[2]]=v79[3]/v77[v79[4]] ;end elseif (v80<=22) then if (v80==21) then local v192=v79[2];local v193={v77[v192](v13(v77,v192 + 1 ,v72))};local v194=0;for v313=v192,v79[4] do local v314=0;while true do if (v314==0) then v194=v194 + 1 ;v77[v313]=v193[v194];break;end end end else local v195=0;local v196;while true do if (v195==0) then v196=v79[2];v77[v196]=v77[v196](v13(v77,v196 + 1 ,v79[3]));break;end end end elseif (v80==23) then v77[v79[2]]=v77[v79[3]] + v79[4] ;else v77[v79[2]]={};end elseif (v80<=37) then if (v80<=30) then if (v80<=27) then if (v80<=25) then if  not v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v80==26) then v77[v79[2]]=v79[3];else v77[v79[2]]=v77[v79[3]] * v77[v79[4]] ;end elseif (v80<=28) then v77[v79[2]]=v77[v79[3]]/v79[4] ;elseif (v80==29) then local v203=v79[2];local v204=v79[4];local v205=v203 + 2 ;local v206={v77[v203](v77[v203 + 1 ],v77[v205])};for v315=1,v204 do v77[v205 + v315 ]=v206[v315];end local v207=v206[1];if v207 then v77[v205]=v207;v71=v79[3];else v71=v71 + 1 ;end else v77[v79[2]]=v79[3] * v77[v79[4]] ;end elseif (v80<=33) then if (v80<=31) then v77[v79[2]]=v77[v79[3]];elseif (v80==32) then local v209=v79[2];v72=(v209 + v78) -1 ;for v318=v209,v72 do local v319=0;local v320;while true do if (v319==0) then v320=v73[v318-v209 ];v77[v318]=v320;break;end end end elseif (v77[v79[2]]~=v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=35) then if (v80>34) then v77[v79[2]]=v62[v79[3]];else v77[v79[2]]=v77[v79[3]] * v77[v79[4]] ;end elseif (v80>36) then v71=v79[3];else local v214=v79[2];v77[v214](v77[v214 + 1 ]);end elseif (v80<=43) then if (v80<=40) then if (v80<=38) then v71=v79[3];elseif (v80==39) then local v215=v79[2];local v216,v217=v70(v77[v215](v77[v215 + 1 ]));v72=(v217 + v215) -1 ;local v218=0;for v321=v215,v72 do v218=v218 + 1 ;v77[v321]=v216[v218];end else local v219=0;local v220;while true do if (1==v219) then for v410=v220,v72 do local v411=0;local v412;while true do if (v411==0) then v412=v73[v410-v220 ];v77[v410]=v412;break;end end end break;end if (v219==0) then v220=v79[2];v72=(v220 + v78) -1 ;v219=1;end end end elseif (v80<=41) then if (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80==42) then for v324=v79[2],v79[3] do v77[v324]=nil;end else local v222=0;local v223;while true do if (v222==0) then v223=v79[2];v77[v223](v77[v223 + 1 ]);break;end end end elseif (v80<=46) then if (v80<=44) then v77[v79[2]]=v77[v79[3]] -v77[v79[4]] ;elseif (v80>45) then v77[v79[2]]=v77[v79[3]];else local v226=0;local v227;local v228;local v229;while true do if (v226==1) then v229=0;for v413=v227,v79[4] do local v414=0;while true do if (v414==0) then v229=v229 + 1 ;v77[v413]=v228[v229];break;end end end break;end if (v226==0) then v227=v79[2];v228={v77[v227](v13(v77,v227 + 1 ,v79[3]))};v226=1;end end end elseif (v80<=48) then if (v80==47) then local v230=v77[v79[4]];if  not v230 then v71=v71 + 1 ;else v77[v79[2]]=v230;v71=v79[3];end else local v231=v79[2];local v232={v77[v231](v13(v77,v231 + 1 ,v72))};local v233=0;for v326=v231,v79[4] do v233=v233 + 1 ;v77[v326]=v232[v233];end end elseif (v80==49) then local v234=0;local v235;local v236;local v237;local v238;while true do if (v234==1) then v72=(v237 + v235) -1 ;v238=0;v234=2;end if (v234==0) then v235=v79[2];v236,v237=v70(v77[v235](v77[v235 + 1 ]));v234=1;end if (v234==2) then for v415=v235,v72 do v238=v238 + 1 ;v77[v415]=v236[v238];end break;end end else local v239=0;local v240;while true do if (v239==0) then v240=v77[v79[4]];if v240 then v71=v71 + 1 ;else v77[v79[2]]=v240;v71=v79[3];end break;end end end elseif (v80<=75) then if (v80<=62) then if (v80<=56) then if (v80<=53) then if (v80<=51) then local v126=v79[2];v77[v126]=v77[v126](v13(v77,v126 + 1 ,v79[3]));elseif (v80>52) then v77[v79[2]]=v77[v79[3]] -v77[v79[4]] ;else local v242=v77[v79[4]];if v242 then v71=v71 + 1 ;else v77[v79[2]]=v242;v71=v79[3];end end elseif (v80<=54) then v77[v79[2]]=v77[v79[3]][v79[4]];elseif (v80==55) then if ((v79[3]=="_ENV") or (v79[3]=="getfenv")) then v77[v79[2]]=v63;else v77[v79[2]]=v63[v79[3]];end else v77[v79[2]]={};end elseif (v80<=59) then if (v80<=57) then local v130=0;local v131;local v132;while true do if (1==v130) then v77[v131 + 1 ]=v132;v77[v131]=v132[v79[4]];break;end if (v130==0) then v131=v79[2];v132=v77[v79[3]];v130=1;end end elseif (v80==58) then v77[v79[2]]=v77[v79[3]][v79[4]];else v77[v79[2]][v79[3]]=v77[v79[4]];end elseif (v80<=60) then v77[v79[2]]=v77[v79[3]] * v79[4] ;elseif (v80>61) then v77[v79[2]]=v77[v79[3]][v77[v79[4]]];else local v250=0;local v251;while true do if (v250==0) then v251=v79[2];v77[v251]=v77[v251](v13(v77,v251 + 1 ,v72));break;end end end elseif (v80<=68) then if (v80<=65) then if (v80<=63) then local v134=0;local v135;local v136;local v137;while true do if (v134==0) then v135=v68[v79[3]];v136=nil;v134=1;end if (v134==1) then v137={};v136=v10({},{__index=function(v361,v362) local v363=0;local v364;while true do if (v363==0) then v364=v137[v362];return v364[1][v364[2]];end end end,__newindex=function(v365,v366,v367) local v368=v137[v366];v368[1][v368[2]]=v367;end});v134=2;end if (v134==2) then for v370=1,v79[4] do local v371=0;local v372;while true do if (1==v371) then if (v372[1]==46) then v137[v370-1 ]={v77,v372[3]};else v137[v370-1 ]={v62,v372[3]};end v76[ #v76 + 1 ]=v137;break;end if (v371==0) then v71=v71 + 1 ;v372=v67[v71];v371=1;end end end v77[v79[2]]=v29(v135,v136,v63);break;end end elseif (v80==64) then local v252=0;local v253;local v254;local v255;while true do if (1==v252) then v255=0;for v418=v253,v79[4] do v255=v255 + 1 ;v77[v418]=v254[v255];end break;end if (v252==0) then v253=v79[2];v254={v77[v253](v77[v253 + 1 ])};v252=1;end end else v77[v79[2]][v77[v79[3]]]=v79[4];end elseif (v80<=66) then if (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80>67) then local v259=0;local v260;local v261;while true do if (v259==1) then for v421=1, #v76 do local v422=0;local v423;while true do if (v422==0) then v423=v76[v421];for v462=0, #v423 do local v463=0;local v464;local v465;local v466;while true do if (v463==1) then v466=v464[2];if ((v465==v77) and (v466>=v260)) then v261[v466]=v465[v466];v464[1]=v261;end break;end if (v463==0) then v464=v423[v462];v465=v464[1];v463=1;end end end break;end end end break;end if (v259==0) then v260=v79[2];v261={};v259=1;end end elseif v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=71) then if (v80<=69) then local v138=v79[2];do return v13(v77,v138,v72);end elseif (v80==70) then v77[v79[2]]=v29(v68[v79[3]],nil,v63);else local v263=v77[v79[4]];if  not v263 then v71=v71 + 1 ;else local v374=0;while true do if (0==v374) then v77[v79[2]]=v263;v71=v79[3];break;end end end end elseif (v80<=73) then if (v80>72) then local v264=v79[2];v77[v264](v13(v77,v264 + 1 ,v79[3]));else v77[v79[2]]=v79[3]/v77[v79[4]] ;end elseif (v80>74) then do return;end else local v266=v79[2];local v267={};for v336=1, #v76 do local v337=0;local v338;while true do if (v337==0) then v338=v76[v336];for v440=0, #v338 do local v441=v338[v440];local v442=v441[1];local v443=v441[2];if ((v442==v77) and (v443>=v266)) then v267[v443]=v442[v443];v441[1]=v267;end end break;end end end end elseif (v80<=88) then if (v80<=81) then if (v80<=78) then if (v80<=76) then local v139=0;local v140;while true do if (0==v139) then v140=v79[2];v77[v140]=v77[v140](v77[v140 + 1 ]);break;end end elseif (v80==77) then v77[v79[2]]=v77[v79[3]] + v77[v79[4]] ;else local v269=v79[2];local v270,v271=v70(v77[v269](v13(v77,v269 + 1 ,v79[3])));v72=(v271 + v269) -1 ;local v272=0;for v341=v269,v72 do local v342=0;while true do if (0==v342) then v272=v272 + 1 ;v77[v341]=v270[v272];break;end end end end elseif (v80<=79) then if  not v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v80>80) then local v274=v79[2];local v275=v79[4];local v276=v274 + 2 ;local v277={v77[v274](v77[v274 + 1 ],v77[v276])};for v343=1,v275 do v77[v276 + v343 ]=v277[v343];end local v278=v277[1];if v278 then v77[v276]=v278;v71=v79[3];else v71=v71 + 1 ;end else v77[v79[2]]=v79[3] * v77[v79[4]] ;end elseif (v80<=84) then if (v80<=82) then local v141=v79[2];local v142={v77[v141](v77[v141 + 1 ])};local v143=0;for v158=v141,v79[4] do v143=v143 + 1 ;v77[v158]=v142[v143];end elseif (v80==83) then local v280=v79[3];local v281=v77[v280];for v346=v280 + 1 ,v79[4] do v281=v281   .. v77[v346] ;end v77[v79[2]]=v281;else local v283=0;local v284;local v285;local v286;while true do if (v283==1) then v286=0;for v427=v284,v79[4] do v286=v286 + 1 ;v77[v427]=v285[v286];end break;end if (v283==0) then v284=v79[2];v285={v77[v284](v13(v77,v284 + 1 ,v79[3]))};v283=1;end end end elseif (v80<=86) then if (v80==85) then v77[v79[2]]=v77[v79[3]] -v79[4] ;else local v288=v79[2];do return v13(v77,v288,v288 + v79[3] );end end elseif (v80==87) then v77[v79[2]]=v77[v79[3]][v77[v79[4]]];elseif v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=94) then if (v80<=91) then if (v80<=89) then v77[v79[2]]=v79[3];elseif (v80==90) then for v347=v79[2],v79[3] do v77[v347]=nil;end else local v291=v79[2];local v292,v293=v70(v77[v291](v13(v77,v291 + 1 ,v79[3])));v72=(v293 + v291) -1 ;local v294=0;for v349=v291,v72 do local v350=0;while true do if (v350==0) then v294=v294 + 1 ;v77[v349]=v292[v294];break;end end end end elseif (v80<=92) then v77[v79[2]][v79[3]]=v79[4];elseif (v80==93) then do return;end elseif ((v79[3]=="_ENV") or (v79[3]=="getfenv")) then v77[v79[2]]=v63;else v77[v79[2]]=v63[v79[3]];end elseif (v80<=97) then if (v80<=95) then local v148=v79[2];local v149=v77[v79[3]];v77[v148 + 1 ]=v149;v77[v148]=v149[v79[4]];elseif (v80==96) then do return v77[v79[2]];end else v77[v79[2]][v79[3]]=v79[4];end elseif (v80<=99) then if (v80>98) then if (v77[v79[2]]~=v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end else v77[v79[2]]=v77[v79[3]] + v77[v79[4]] ;end elseif (v80==100) then if (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end v71=v71 + 1 ;end end;end return v29(v28(),{},v17)(...);end vv9(),...);
